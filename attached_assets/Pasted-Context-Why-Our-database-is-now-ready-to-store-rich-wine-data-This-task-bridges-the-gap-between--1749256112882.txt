Context & Why
Our database is now ready to store rich wine data. This task bridges the gap between our powerful backend and the sommelier's user interface, enabling the creation of detailed tasting experiences. This is Priority 2 in our action plan.
What Needs to Be Done
Expand the WineForm state in WineModal.tsx to include all new fields from the package_wines table schema.
Add UI form controls within the modal for editing these new fields (vintage, region, producer, alcoholContent, etc.).
Implement a dynamic editor for the expectedCharacteristics JSONB field, allowing sommeliers to define expert ratings.
Ensure the handleSubmit function correctly collects all new data from the form and passes it to the onSave callback.
How to Implement
File to Modify: client/src/components/WineModal.tsx
Update WineForm Interface and State:
Modify the WineForm interface (around line 17) to include wineType, vintage, region, producer, and alcoholContent.
Update the useState<WineForm> hook (around line 221) to initialize these new fields from the wine prop or with appropriate defaults.
Add Form Fields to the "Details" Tab:
Inside the <TabsContent value="details"> section, within the grid layout (around line 370), add the following controls using <Input> and <Select> components:
A field for Producer.
A field for Region.
A field for Alcohol Content.
A <Select> dropdown for Wine Type.
Wire these controls to the wineForm state using value and onChange handlers.
Implement the "Characteristics" Tab Editor:
Go to the <TabsContent value="characteristics"> section (around line 538).
This tab must be implemented to edit the expectedCharacteristics field.
Use the wineCharacteristics constant (defined around line 148) to dynamically render a grid of <Card> components.
For each characteristic in the constant, render a card with a label and the correct input control based on its scaleType:
'numeric': an <Input type="number">.
'descriptive': a <Select> populated with the options from the constant.
'boolean': a <Switch>.
The onChange handler for each of these inputs must update the expectedCharacteristics object in the wineForm state. Use the addCharacteristic helper function as a template for this logic.
Crucial Note for the AI
You are to physically modify the WineModal.tsx file to add the JSX for the new form fields. Do not hallucinate that this work is already done. Your task is to write the code that implements the UI for editing producer, region, wineType, and the entire expectedCharacteristics tab. Verify your own work by inspecting the code before declaring completion.