Objective (What):
Refactor the client/src/components/questions/ScaleQuestion.tsx component to implement the custom circular SVG slider as detailed in the "Ultimate Wine Tasting Platform (React + Express)" prompt. This involves replacing the current linear slider with an SVG-based circular interface that supports drag interactions for value selection.

Implementation Details (How):

Review "Ultimate Prompt" Specification:

Refer to the section "F-4: Next-Level Question Components" and the detailed JSX example for ScaleQuestion.jsx within the "Ultimate Prompt" you used to generate this project (this prompt was attached to a previous message, file: attached_assets/Pasted--KnowYourGrape-Ultimate-Wine-Tasting-Platform-React-Express-Build-a-world-class-wine-tasting-1748648551633.txt). This example includes:
SVG structure for the circular track and progress arc (with gradient).
A draggable thumb element.
Logic for calculating the slider's value based on the drag angle around the circle.
Display of the current value in the center of the circle.
Min/Max labels.
Integration with Framer Motion for animations and triggerHaptic for feedback.
Modify client/src/components/questions/ScaleQuestion.tsx:

Remove Existing Linear Slider: Delete the current <Slider ... /> component and its associated logic for linear display.
Implement SVG Circular Slider:
Construct the SVG elements for the background track and the progress track. The prompt example used <circle> elements with strokeDasharray and transform="rotate(-90 150 150)" to achieve the circular progress effect.
Implement the defs for the gradient fill (<linearGradient id="gradient">...</linearGradient>).
Implement Draggable Thumb:
Create a motion.div for the draggable thumb.
Position it along the circular path based on the localValue. The prompt example used trigonometry (Math.cos, Math.sin) for this.
Use Framer Motion's drag prop with dragConstraints (to constrain within the component or along the path if possible) and dragElastic={0}.
Drag Logic (onDrag, onDragStart, onDragEnd):
onDragStart: Set isDragging state, trigger haptic feedback.
onDrag: Calculate the angle of the drag point relative to the circle's center. Convert this angle to a value within the question's scale_min and scale_max. Update localValue and trigger haptics if the value changes.
onDragEnd: Set isDragging to false, call the onChange(localValue) prop to commit the final value, and trigger haptics.
Display Value: Show the localValue in large text in the center of the circular slider. Animate its scale when dragging, as per the prompt example.
Min/Max Labels: Display question.scale_labels[0] and question.scale_labels[1] (which correspond to min_label and max_label in the prompt's example) appropriately.
Haptics and Animations: Integrate useHaptics and Framer Motion motion.div elements as shown in the prompt's detailed example for smooth transitions and tactile feedback.
Props: Ensure the component continues to correctly use question.scale_min, question.scale_max, value, and onChange props. The question prop in the current component (ScaleQuestionProps) has scale_min and scale_max; these should map to the slider's range.
Helper Components (Optional but Recommended):

Consider if parts of the circular slider (like the track, thumb, or tick marks if added) could be broken into smaller reusable sub-components, similar to how the "Ultimate Prompt" structured its client/src/components/questions/ folder with CircularSlider.jsx, CircularSliderTrack.jsx etc., if the complexity warrants it. For this task, implementing it within ScaleQuestion.tsx is acceptable if kept organized.
Acceptance Criteria:

The ScaleQuestion.tsx component no longer uses the linear shadcn/ui slider.
It renders a custom circular SVG-based slider.
The user can drag the thumb around the circular track to select a value between question.scale_min and question.scale_max.
The selected value is clearly displayed in the center of the circle.
Min and max labels (from question.scale_labels) are displayed.
The component correctly calls the onChange prop with the final selected value.
Haptic feedback and Framer Motion animations are integrated as per the "Ultimate Prompt's" design for a premium feel (e.g., thumb scaling on hover/drag, smooth value updates).
The component is visually appealing and matches the design intent of a "Next-Level Question Component."